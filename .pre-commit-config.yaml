# .pre-commit-config.yaml
repos:
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: [
            "types-requests",
            "types-PyYAML",
            "types-python-dateutil",
            "click>=8.1.3", # Add click
            "types-click>=1.1.0",
          ]
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v2.3.0
    hooks:
      - id: check-yaml
      - id: end-of-file-fixer
        exclude: '^py_launch_blueprint/_version\.py$'
      - id: trailing-whitespace
      - id: check-toml
      - id: check-added-large-files
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.9
    hooks:
      - id: ruff
        entry: ruff check --force-exclude --no-cache
        args: [--fix]
        language: python
        types_or: [cython, pyi, python]
      - id: ruff-format
        entry: ruff format --force-exclude --no-cache
        language: python
        types_or: [cython, pyi, python]
  - repo: local
    hooks:
      - id: taplo-format
        name: Format TOML files
        entry: taplo format
        language: system
        files: "\\.toml$"
        args: ["--config", ".taplo.toml"]
  - repo: local
    hooks:
      - id: pytest
        name: Run pytest
        entry: pytest
        language: system
        types: [python]
        pass_filenames: false # Run full test suite
        stages: [pre-commit] # Only run on pre-commit


# Global Exclusion
# If you want to exclude py_launch_blueprint/_version.py from all pre-commit hooks,
# you can use a global exclusion at the top level of your configuration:

# text
# exclude: '^py_launch_blueprint/_version\.py$' # This is the global exclusion
# repos:
# - repo: https://github.com/pre-commit/pre-commit-hooks
#   rev: v4.4.0
#   hooks:
#   - id: end-of-file-fixer 

# Hook-Level Exclusion (Recommended Approach)
# For your specific case where the end-of-file-fixer hook is modifying 
# py_launch_blue/print_version.py, the most targeted solution is to add an exclusion 
# at the hook level. This approach allows you to exclude the file from only the 
# problematic hook while maintaining checks for other hooks that might be beneficial.
# repos:
# - repo: https://github.com/pre-commit/pre-commit-hooks
#   rev: v4.4.0
#   hooks:
#   - id: end-of-file-fixer 
#     exclude: '^py_launch_blueprint/_version\.py$'
#
# Example of multiple files excluded from a single hook
# - id: end-of-file-fixer
#   exclude: '^(py_launch_blueprint/_version\.py|other/file\.py)$'
# 
# Example of Excluding Entire Directories
# - id: end-of-file-fixer
#   exclude: '^py_launch_blueprint/'

