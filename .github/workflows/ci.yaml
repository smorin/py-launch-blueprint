# .github/workflows/ci.yml
name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: continuous-integration
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v5

    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install the project
      run: uv sync --all-extras --dev

#    - name: Run tests
#      # For example, using `pytest`
#      run: uv run pytest tests

    # Format code

    - name: Run type checker
      run: uvx mypy py_launch_blueprint/

    - name: Check linters
      run: uvx ruff check py_launch_blueprint/

#    - name: Run tests with coverage
#      run: |
#        pytest --cov=./ --cov-report=xml

#    - name: Upload coverage
#      uses: codecov/codecov-action@v4

    - name: Scan for vulnerabilities
      uses: paulfermoreyes/py-launch-blueprint@main

  # publish:
  #   needs: [test, security]
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: Build and publish to PyPI
  #     env:
  #       TWINE_USERNAME: __token__
  #       TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
  #     run: |
  #       uv pip install build twine
  #       python -m build
  #       twine upload dist/*
